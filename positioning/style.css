body {
  background: #eee;
}
/*** Box model ***/
.box-model {
  width: 30%;
  margin: 20px;
  padding: 20px;
  border: 2px solid black;
  /* block to a makes them work as p */
  /* display: block; */
  /* inline-block makes them work as inline and blocks at the same time */
  display: inline-block;
}

/*** Normal document ***/
.normal-document {
  padding: 20px;
  background: #eee;
  font-family: arial;
  line-height: 1.4em;
}

/*** Floating elements ***/
.wrapper {
  background: #fff;
  max-width: 960px;
  /* center horizontally */
  margin: 0 auto;
  padding: 20px;
  /* z index relative to the wrapper, every element inside wrapper would have a z-index of 0 */
  /* if a child has a z-index higher, it is going to be relative to wrapper */
  position: relative;
  z-index: 0;
}

/* float the image left and text in front of it */
.floating-element {
  float: left;
  margin: 10px;
}
.floating-element:after {
  display: block;
  content: "";
  clear: both;
}

.services {
  clear: both;
  /* clipping content */
  max-height: 150px;
  /* overflow: everything that is outside the element? */
  /* overflow: visible is the default */
  overflow: hidden;
  margin: 20px 0;
}

.service h2,
.service p {
  color: #999;
  margin: 10px 0;
  text-align: center;
}

.service {
  float: left;
  background: #eee;
  width: 29%;
  margin: 30px 1%;
  padding: 1%;
  height: 140px;
}

/*** Clearing floats ***/
.content {
  background: pink;
  padding: 10px;
  /* restart normal document flow after the floats are set */
  /* clear: left / right / both */
  clear: both;
  margin-top: 20px;
  margin: 0 1%;
}

/* creates this style to scope the floating elements to the normal document flow */
/* styles insert an empty content at the end of the services element styled */
.services:after {
  /* content: "hello"; */
  content: "";
  display: block;
  clear: both;
}

/*** Floating Columns ***/
section,
aside {
  float: left;
  width: 46%;
  padding: 1%;
  margin: 1%;
  background: #f2f2f2;
}

.columns:after {
  display: block;
  content: "";
  clear: both;
}

/*** Text Columns ***/
.text-columns {
  clear: both;
  -webkit-column-count: 3;
  /* for not supported browsers */
  column-count: 3;
  -webkit-column-gap: 50px;
  column-gap: 50px;
  /* line between columns */
  -webkit-column-rule: 1px solid #ccc;
  column-rule: 1px solid #ccc;
  text-align: justify;
}

/* Positions available: 
  static, relative, absolute, fixed and inherit */

/* Position Relative */
/* still ocuppies the position on the document flow */
.service {
  position: relative;
}
/* the left, bottom, ... properties just offset the element */
/* used to tweak elements a little bit */
.service:nth-child(1) {
  /* first child of services */
  top: 5px;
}

.service:nth-child(2) {
  top: 15px;
}

.service:nth-child(3) {
  top: 25px;
}

/* Position absolute */
/* remove element from the normal document flow */
/* can be position absolutly (everywhere) on the parent element(if is relative) or the document */
#banner {
  max-height: 300px;
  overflow: hidden;
  margin: 1%;
  position: relative;
}

#banner h2 {
  /* if parent is relative, the absolute element is attached to the parent */
  position: absolute;
  top: 30px;
  width: 100%;
  text-align: center;
  color: #fff;
}

/* Position fixed */
/* always positions relative to the document window */
/* takes outside of the normal document flow */
nav {
  background: #333;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  /* z index stack order over o lower of the stacking order */
  z-index: 1;
}

nav ul:after {
  display: block;
  content: "";
  clear: both;
}

nav li {
  /* remove dots from list */
  list-style-type: none;
  margin: 0 10px;
  color: #fff;
  float: right;
}

/* Z index and Stacking order */
/* the lower of the document has the higher stacking order */
/* default z index is 0 */
